.eventpopover {
	position: absolute;
	z-index: 11;
	width: 400px;
	max-width: 100%;
	max-height: 70%;
	transform-origin: 50%;
	border-radius: $global-border-radius;
	box-shadow: 0 0 16px 3px $input-shadow-color;
	background: var(--bgcolor-main-area, $white);
	color: var(--color-main-area, $pm-global-grey);
	animation: eventpopoverIn ease .15s;
	animation-fill-mode: both;
	// transition: all .25s ease; should be applied only when opened and end of animation <-- this is solved by react-transition-group

	&-title {
		padding-right: .5em;
		font-size: 2.2rem;
	}

	&--full-width {
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		width: 100%;
		height: 100%;
		max-height: 100%;
	}

	&--simple {
		select.pm-field {
			height: unset;
		}
		.pm-label {
			width: 2.4em;
			padding: 0.4em 0 0 0.4em;
		}
		.pm-field {
			&:focus,
			&:focus-within {
				background-color: var(--bgcolor-input, $pm-input-background);
				box-shadow: unset;
				border: 1px solid $pm-blue;
			}
		}
		.item + .item {
			margin-top: 1em;
		}
		.pm-button--link {
			text-decoration: none;
			&.add-notification {
				height: 3em;
			}
			&.remove-notification {
				color: unset;
			}
		}
		*::placeholder {
			color: $cloudy-blue;
		}
	}

	// special fixes for recurring frequency ------------------
	.noInEventPopover {
		display: none;
	}

	.onpopover-flex-column {
		flex-direction: column;

		& > * {
			width: 100%;
			flex-basis: auto;
		}
	}

	.calendar-recurringFrequencyEnd-grid {
		grid-template-columns: minmax(6em, auto) minmax(7em, auto) 1fr;
	}
	// --------------------------------------------------------
}

@keyframes eventpopoverIn {
	from { opacity: 0; }
	to   { opacity: 1; }
}
