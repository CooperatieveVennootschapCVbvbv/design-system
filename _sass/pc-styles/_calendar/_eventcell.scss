.calendar-dayeventcell {
	height: 28px; // careful when updating this (depends also on JS calculations)
	padding-right: $gridcell-right-margin;
	padding-top: 3px;
	white-space: nowrap;

	&-inner {
		position: relative;
		min-height: 100%;
		padding: 0 0.5em;
		background-color: rgba(lighten($pm-global-altgrey, 30%), .5);
		border: $border-event-cells;
		border-radius: 2px;
		color: $black;
		cursor: pointer;

		&,
		&--isLoaded {
			&.isNotAllDay {
				background: none;
				border: none;
				color: inherit;

				&:hover,
				&:focus {
					background-color: var(--bgcolor-input, #F1F3F4);
				}
			}
		}
	}

	&--isOutsideStart,
	&-inner--isOutsideStart {
		padding-left: 0;
	}

	&--isOutsideEnd,
	&-inner--isOutsideEnd {
		padding-right: 0;
	}

	&-circle {
		color: rgba(lighten($pm-global-altgrey, 30%), .5);
	}

	&-inner--isLoaded &-circle {
		color: var(--background);
	}

	&-lock-icon {
		margin-top: .25em;
	}
}

.calendar-eventcell {
	position: absolute;
	z-index: 5;
	border: $border-event-cells;
	border-radius: 2px;
	background: rgba(lighten($pm-global-altgrey, 30%), .5);
	color: $black;
	cursor: pointer;

	&::after {
		content: '';
		position: absolute;
		top: -1px;
		left: -1px;
		width: calc(100% + 2px);
		height: calc(100% + 2px);
		box-sizing: border-box;
		border: 1px solid transparent; // white was creating issue on Safari Mac
		border-radius: 2px;
		pointer-events: none;
	}

	@include respond-to($breakpoint-small) {
		&-title,
		&-timestring {
			font-size: 1.2rem;
		}
	}

	&-lock-icon {
		margin-top: -.125em;
	}
}

.calendar-dayeventcell,
.calendar-eventcell {
	--opacity: 1;
}

.calendar-dayeventcell--isBefore,
.calendar-eventcell--isBefore {
	--opacity: .6;
}

.calendar-dayeventcell-inner,
.calendar-eventcell {
	opacity: var(--opacity);
	transition: opacity .5s ease-out, background-color .15s ease-in-out;
	animation: loadingEvent 1s cubic-bezier(0.755, 0.05, 0.855, 0.06) infinite alternate;

	&--isLoaded {
		background-color: var(--background);
		color: var(--foreground);
		animation: none;
	}
}

@keyframes loadingEvent {
	from {
		opacity: var(--opacity);
	}
	to {
		opacity: calc(var(--opacity) - .4);
	}
}
