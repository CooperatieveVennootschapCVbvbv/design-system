/*
 * badges/labels
 */
$border-width: 2px !default;
[class*="badgeLabel"]:not([class*="pm-badgeLabel-"]) {
  @extend .uppercase;
  @extend .color-white;
  @extend .inline-flex;
  font-size: rem(11); // to be sure this is the same height everywhere
  padding: 0 em(2) em(1);
  line-height: 1;
  border-radius: $global-border-radius;
  border-width: $border-width;
  border-style: solid;
}

// only for labels in conversations
$badges-border-radius: 1rem !default;
$badges-max-width: 15em !default;
.pm-badgeLabel-container  {
	[class*="badgeLabel"] {
		border-radius: $badges-border-radius;
		padding: .1rem .2rem;
		max-width: $badges-max-width;
		flex-wrap: nowrap;
		min-width: 1em; // if really short label ^^
		border-color: currentColor;
		border-width: $border-width;
		font-size: rem(12);
	}
	.badgeLabel {
		background: currentColor;
		color: currentColor;
		margin-left: .25em;
		padding-bottom: .2rem;
	}
  	.pm-badgeLabel-link,
	.pm-badgeLabel-link:active,
	.pm-badgeLabel-link:hover,
	.pm-badgeLabel-link:focus {
		height: 1.4rem;
		color: $white;
		text-decoration: none;
		text-align: center;

		&:not(:last-child) {
			padding-right: .4rem;
		}
	}
}
// collapsed version
$label-border-width: 2px !default;
$label-border-color: var(--bgcolor-view-column-detail, $white) !default;
.pm-badgeLabel-container--collapsed {
	.badgeLabel {
		position: relative;
		margin-left: 0;
		border: $border-width solid $label-border-color;

		&:not(:first-child) {
			border-top-left-radius: 0;
			border-bottom-left-radius: 0;

			&::before {
				content: '';
				background: currentColor;
				position: absolute;
				top: -$label-border-width;
				bottom: -$label-border-width;
				border-top-width: $label-border-width;
				border-bottom-width: $label-border-width;
				border-style: solid;
				border-color: $label-border-color;
				border-left: 0;
				border-right: 0;
				left: calc(-0.2rem - 1rem);
				width: 1em;
			}
			> * {
				position: relative;
				overflow: hidden;
				max-width: 0;
				transition: max-width .5s ease, min-width .5s ease;
				transition-delay: 0s, 0s, .5s;
				min-width: 0;
				padding-right: 0;
			}
			&:hover,
			&:focus,
			&:focus-within,
			&:active {
				> * {
					max-width: $badges-max-width;
					min-width: 1rem; // if really short label ^^
					transition-delay: 0s;
				}
				> .pm-badgeLabel-link {
					padding-right: .4rem;
				}
			}
		}
		@for $i from 1 through 20 {
			&:nth-child(#{$i}) {
			  z-index: #{20 - $i};
			}
		}
	}

}

// email list
.item-container,
.item-container-row {
	&:not(.read) {
		.pm-badgeLabel-container--collapsed {
			.badgeLabel {
				border-color: var(--bgcolor-unread-item-column-list, $white);
				&:not(:first-child) {
					&::before {
						border-color: var(--bgcolor-unread-item-column-list, $white);
					}
				}
			}
		}
	}
	&.read {
		.pm-badgeLabel-container--collapsed {
			.badgeLabel {
				border-color: var(--bgcolor-item-column-list, $pm-global-muted);
				&:not(:first-child) {
					&::before {
						border-color: var(--bgcolor-item-column-list, $pm-global-muted);
					}
				}
			}
		}
	}
	&.item-is-selected,
	&.item-is-selected.read {
		.pm-badgeLabel-container--collapsed {
			.badgeLabel {
				border-color: var(--bgcolor-item-column-active, #b2bef1); // $conversation-selected-bg is using rgba, does not work
				&:not(:first-child) {
					&::before {
						border-color: var(--bgcolor-item-column-active, #b2bef1); // $conversation-selected-bg is using rgba, does not work
					}
				}
			}
		}
	}
}

// in conversation display
.message-header-expanded {
		.pm-badgeLabel-container--collapsed {
			.badgeLabel {
				border-color: var(--bgcolor-item-column-list, $pm-global-muted);
				&:not(:first-child) {
					&::before {
						border-color: var(--bgcolor-item-column-list, $pm-global-muted);
					}
				}
			}
		}

}

// when several labels can wrap (in conversations/show details/several labels/tiny viewport
.pm-badgeLabel-container--groupMayWrap {
	.badgeLabel {
		margin-bottom: .25em;
	}
}

.badgeLabel-success {
  @extend .bg-global-success;
  border-color: $pm-global-success;
}
.badgeLabel-blue {
  @extend .bg-pm-blue;
  border-color: $pm-blue;
}
.badgeLabel-green {
  @extend .bg-pv-green;
  border-color: $pv-green;
}
@if ($pm-primary == $pm-blue) {
  .badgeLabel-primary,
  .badgeLabel {
    @extend .bg-pm-blue;
    border-color: $pm-blue;
  }
}
@else {
  .badgeLabel-primary,
  .badgeLabel {
    @extend .bg-pv-green;
    border-color: $pv-green;
  }
}
.badgeLabel-grey {
  @extend .bg-global-grey;
  border-color: $pm-global-grey;
}
.badgeLabel-warning {
  @extend .bg-global-attention;
  border-color: $pm-global-attention;
}
.badgeLabel-error {
  @extend .bg-global-warning;
  border-color: $pm-global-warning;
}
