/*
$dropDown-width: 230px !default;
$dropDown-wide-width: 450px !default;
$dropDown-narrow-width: 9em !default;
*/

.dropDown {
	position: fixed;
	top: calc(var(--top) * 1px);
	left: calc(var(--left) * 1px);
	z-index: 666;
	display: block;
	min-width: 8em;
	max-width: 15em;
	transform: scale(1, 1);
	border-radius: $global-border-radius;
	box-shadow: 0 0 16px 3px $input-shadow-color;
	background: var(--bgcolor-main-area, $white);
	color: var(--color-main-area, $pm-global-grey);
	opacity: 1;
	visibility: visible;
	transition: visibility 0s ease, transform 0.15s ease, opacity 0.15s ease;
	transition-delay: 0s;

	/*
	&--narrow {
		width: $dropDown-narrow-width;
	}
	&--wide {
		width: $dropDown-wide-width;
	}
	&--auto {
		width: auto;
	}
	*/

	// Hidden dropdown state
	&[hidden] {
		display: block;
		transform: scale(0, 0);
		opacity: 0;
		visibility: hidden;
		transition-delay: 0s, 0s;
	}

	// Transform origins regarding dropDown position
	@each $position, $origin in (
		(top         , bottom center),
		(top-left    , bottom left),
		(top-right   , bottom right),
		(bottom      , top center),
		(bottom-left , top left),
		(bottom-right, top right),
		(left        , right center),
		(left-bottom , right bottom),
		(left-top    , right top),
		(right       , left center),
		(right-bottom, left bottom),
		(right-top   , left top)
	) {
		&--#{$position} {
			transform-origin: $origin;
		}
	}

	/* Dropdown arrow */
	&::before {
		--size: 1.5rem;
		--offset: #{2.12rem - 1.5rem}; // Pythagore powa for middle line alignement!

		content: '';
		position: absolute;
		z-index: -1;
		width: var(--size);
		height: var(--size);
		transform: rotate(45deg);
		background-color: var(--bgcolor-main-area, $white);
	}

	&--top,
	&--top-left,
	&--top-right {
		&::before {
			bottom: calc(var(--size) / -2);
		}
	}
	&--bottom,
	&--bottom-left,
	&--bottom-right {
		&::before {
			top: calc(var(--size) / -2);
		}
	}
	&--left,
	&--left-top,
	&--left-bottom {
		&::before {
			right: calc(var(--size) / -2);
		}
	}
	&--right,
	&--right-top,
	&--right-bottom {
		&::before {
			left: calc(var(--size) / -2);
		}
	}

	&--top,
	&--bottom {
		&::before {
			left: calc(50% - (var(--size) / 2));
		}
	}
	&--top-left,
	&--bottom-left {
		&::before {
			left: 1rem;
		}
	}
	&--top-right,
	&--bottom-right {
		&::before {
			right: 1rem;
		}
	}

	&--left,
	&--right {
		&::before {
			top: calc(50% - (var(--size) / 2));
		}
	}
	&--left-top,
	&--right-top {
		&::before {
			top: var(--offset);
		}
	}
	&--left-bottom,
	&--right-bottom {
		&::before {
			bottom: var(--offset);
		}
	}

	/* scrollable insides of the dropdown */
	&-content {
		max-height: 20em;
		overflow: auto;
		border-radius: $global-border-radius;
		background: var(--bgcolor-main-area, $white) no-repeat;
		background-image:
			radial-gradient(
				farthest-side at 50% 0,
				#acb0bf,
				transparent
			),
			radial-gradient(
				farthest-side at 50% 100%,
				#acb0bf,
				transparent
			);
		background-position: 50% 0, 0 100%;
		background-size: calc(100% - 2rem) .3rem;

		&::before,
		&::after {
			content: '';
			position: relative;
			z-index: 1;
			display: block;
			height: 1rem;
			background: var(--bgcolor-main-area, $white);
		}

		button {
			color: currentColor;
		}
	}

	&-item {
		&-button,
		&-link {
			&:hover,
			&:focus {
				background-color: var(--bgcolor-input, $pm-global-light);
			}
		}

		&-link {
			&,
			&:hover,
			&:focus,
			&:active {
				color: currentColor;
				text-decoration: none;
			}
		}
	}

	/* Border between items */
	&-item + &-item {
		border-top: 1px solid var(--bordercolor-input, $pm-global-border);
	}

	&-backdrop {
		display: none;
	}
}
